name: Preflight
env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

  MONGODB_URI: ${{secrets.MONGODB_URI}}
  NEXTAUTH_URL: ${{ vars.NEXTAUTH_URL }}
  NEXTAUTH_SECRET: ${{secrets.NEXTAUTH_SECRET}}
  BLOB_READ_WRITE_TOKEN: ${{secrets.BLOB_READ_WRITE_TOKEN}}
  CLOUDINARY_API_KEY: ${{secrets.CLOUDINARY_API_KEY}}
  CLOUDINARY_SECRET: ${{secrets.CLOUDINARY_SECRET}}
  CLOUDINARY_CLOUD_NAME: ${{secrets.CLOUDINARY_CLOUD_NAME}}
  # to tell nextjs to automatically push this client side, we prefix the key with NEXT_PUBLIC
  # @see https://nextjs.org/docs/app/building-your-application/configuring/environment-variables
  # NEXT_PUBLIC_LOCAL_URL=${LOCAL_URL}
  NEXT_PUBLIC_LOCAL_URL: 'http://127.0.0.1:3000'
  LOCAL_URL: 'http://127.0.0.1:3000'
on:
  push:
    branches:
      - main
jobs:
  Install-Start-Test:
    runs-on: ubuntu-latest
    environment: Dev
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
      - name: Create env file
        run: |
          touch .env.local
          echo LOCAL_URL=${{env.LOCAL_URL}} >> .env.local
          echo MONGODB_URI=${{env.MONGODB_URI}} >> .env.local
          echo NEXTAUTH_URL=${{env.NEXTAUTH_URL}} >> .env.local
          echo NEXTAUTH_SECRET=${{env.NEXTAUTH_SECRET}} >> .env.local
          echo BLOB_READ_WRITE_TOKEN=${{env.BLOB_READ_WRITE_TOKEN}} >> .env.local
          echo CLOUDINARY_API_KEY=${{secrets.CLOUDINARY_API_KEY}} >> .env.local
          echo CLOUDINARY_SECRET=${{secrets.CLOUDINARY_SECRET}} >> .env.local
          echo CLOUDINARY_CLOUD_NAME=${{secrets.CLOUDINARY_CLOUD_NAME}} >> .env.local
          cat .env.local
      - name: Install dependencies
        run: npm ci
      - name: Check linting
        run: npm run lint
      - name: Build
        run: npm run build
      # - name: Cypress run on Chrome
      #   # Uses the official Cypress GitHub action https://github.com/cypress-io/github-action
      #   uses: cypress-io/github-action@v6
      #   with:
      #     browser: chrome
      #     # Starts web server for E2E tests - replace with your own server invocation
      #     # https://docs.cypress.io/guides/continuous-integration/introduction#Boot-your-server
      #     start: npm start
      #     wait-on: ${{ env.LOCAL_URL }} # Waits for above
      #     # Records to Cypress Cloud
      #     # https://docs.cypress.io/guides/cloud/projects#Set-up-a-project-to-record
      #     record: true
      #     # parallel: true # Runs test in parallel using settings above
      #   env:
      #     # For recording and parallelization to work you must set your CYPRESS_RECORD_KEY
      #     # in GitHub repo → Settings → Secrets → Actions
      #     CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
      #     # Creating a token https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
